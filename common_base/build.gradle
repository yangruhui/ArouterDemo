apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //MultiDex分包方法
        multiDexEnabled true

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 配置GreenDao基本参数
    greendao {
        schemaVersion 1 //当前数据库版本
        //这里添加的是生成DaoMaster,DaoSession和XXDao文件的地方，com.twilight.common是我项目的主目录，它会给你在主目录下生成dao文件夹
        daoPackage 'com.twilight.common.dao'
        targetGenDir 'src/main/java'
    }

    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api rootProject.ext.dependencies["appcompat"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["testJunit"]
    androidTestImplementation rootProject.ext.dependencies["testEspresso"]

    //MultiDex分包方法
    api rootProject.ext.dependencies["multidex"]
    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_annotation"]

    //GreenDao
    api rootProject.ext.dependencies["greenDao"]

    //okhttp3
    api rootProject.ext.dependencies["okhttp3"]
    //json
    api rootProject.ext.dependencies["fastjson"]
    api rootProject.ext.dependencies["gson"]
    //Rxlifecycle
    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycleComponents"]
    api rootProject.ext.dependencies["glide"]
    //okhttp+retrofit2+rxjava2+livedata必须使用
    api rootProject.ext.dependencies["okgo"]
    api rootProject.ext.dependencies["okio"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["retrofit2Rxjava2Adapter"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["loggingInterceptor"]
    api rootProject.ext.dependencies["converterGson"]
    api rootProject.ext.dependencies["converterScalars"]
    api rootProject.ext.dependencies["stetho"]
    api rootProject.ext.dependencies["stethoOkhttp3"]
    //依赖以下两个库，会自动引用基础库与Android库
    api rootProject.ext.dependencies["rxlifecycle2Components"]
    api rootProject.ext.dependencies["rxlifecycleNavi"]
    api rootProject.ext.dependencies["rxpermissions"]
    api rootProject.ext.dependencies["rxbinding"]
    // Lifecycles, LiveData 和 ViewModel
    api rootProject.ext.dependencies["extensions"]
    // 对 RxJava 的支持
    api rootProject.ext.dependencies["rxjava2"]
}